import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:material_design_icons_flutter/material_design_icons_flutter.dart';
import '../../../../core/theme/app_theme.dart';
import '../../../../core/models/models.dart';
import '../../../../shared/widgets/custom_widgets.dart';
import '../providers/training_provider.dart';
import '../widgets/today_plan_card.dart';
import '../widgets/ai_plan_generator.dart';
import '../widgets/training_history_list.dart';
import '../widgets/achievement_grid.dart';
import '../widgets/checkin_calendar.dart';
import '../widgets/progress_chart.dart';
import '../../../rest/widgets/rest_timer_widget.dart';
import '../../../rest/widgets/rest_input_widget.dart';
import '../../../rest/widgets/rest_feed_widget.dart';
import '../../../../core/providers/rest_provider.dart';
import '../../../../shared/widgets/feature_migration_banner.dart';

/// Tab1 - 训练页面
/// 按照功能重排表实现：
/// - 今日训练计划：展示当日安排，一键开始
/// - 训练执行：动作分解、完成进度、计时/计数
/// - AI推荐训练：个性化训练计划、智能动作推荐
/// - 训练历史：历史记录、趋势图、对比数据
/// - 打卡签到：每日打卡、连续天数统计
/// - 休息模式：休息时间管理、恢复建议
/// - 数据统计：训练时长、消耗卡路里、训练强度
/// - 身体指标：BMI、体脂率、肌肉量计算
/// - 营养管理：饮食记录、饮水追踪、营养建议
/// - AI助手入口：训练/营养/健康问答
class TrainingPage extends ConsumerStatefulWidget {
  const TrainingPage({super.key});

  @override
  ConsumerState<TrainingPage> createState() => _TrainingPageState();
}

class _TrainingPageState extends ConsumerState<TrainingPage>
    with TickerProviderStateMixin {
  late TabController _tabController;
  int _currentTabIndex = 0;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 2, vsync: this); // 简化为2个Tab
    _tabController.addListener(() {
      setState(() {
        _currentTabIndex = _tabController.index;
      });
    });
    
    // 加载休息功能数据
    WidgetsBinding.instance.addPostFrameCallback((_) {
      ref.read(restProvider.notifier).loadRestFeed();
    });
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final trainingState = ref.watch(trainingProvider);
    
    return Scaffold(
      backgroundColor: AppTheme.background,
      appBar: AppBar(
        title: const Text(
          '训练',
          style: TextStyle(
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        backgroundColor: AppTheme.primary,
        elevation: 0,
        actions: [
          // 刷新按钮
          IconButton(
            icon: const Icon(Icons.refresh, color: Colors.white),
            onPressed: () {
              ref.read(trainingProvider.notifier).loadInitialData();
            },
          ),
          // 更多操作
          PopupMenuButton<String>(
            onSelected: (value) {
              _handleMenuAction(value);
            },
            itemBuilder: (context) => [
              const PopupMenuItem(
                value: 'create_plan',
                child: Row(
                  children: [
                    Icon(Icons.add, size: 16),
                    SizedBox(width: 8),
                    Text('创建计划'),
                  ],
                ),
              ),
              const PopupMenuItem(
                value: 'import_template',
                child: Row(
                  children: [
                    Icon(Icons.file_download, size: 16),
                    SizedBox(width: 8),
                    Text('导入模板'),
                  ],
                ),
              ),
              const PopupMenuItem(
                value: 'export_data',
                child: Row(
                  children: [
                    Icon(Icons.file_upload, size: 16),
                    SizedBox(width: 8),
                    Text('导出数据'),
                  ],
                ),
              ),
            ],
            child: const Icon(Icons.more_vert, color: Colors.white),
          ),
        ],
        bottom: TabBar(
          controller: _tabController,
          isScrollable: true,
          indicatorColor: Colors.white,
          labelColor: Colors.white,
          unselectedLabelColor: Colors.white70,
          tabs: const [
            Tab(text: '今日计划', icon: Icon(Icons.today)),
            Tab(text: '数据统计', icon: Icon(Icons.analytics)),
          ],
        ),
      ),
      body: Column(
        children: [
          // 错误提示
          if (trainingState.error != null)
            Container(
              width: double.infinity,
              padding: const EdgeInsets.all(12),
              color: Colors.red[50],
              child: Row(
                children: [
                  Icon(Icons.error, color: Colors.red[600], size: 20),
                  const SizedBox(width: 8),
                  Expanded(
                    child: Text(
                      trainingState.error!,
                      style: TextStyle(color: Colors.red[600]),
                    ),
                  ),
                  IconButton(
                    icon: const Icon(Icons.close, size: 16),
                    onPressed: () {
                      ref.read(trainingProvider.notifier).clearError();
                    },
                  ),
                ],
              ),
            ),
          
          // Tab内容区域
          Expanded(
            child: TabBarView(
              controller: _tabController,
              children: [
                // Tab 1: 今日计划
                _buildTodayPlanTab(trainingState),
                
                // Tab 2: 数据统计（包含训练历史和打卡签到）
                _buildDataStatsTab(trainingState),
              ],
            ),
          ),
        ],
      ),
    );
  }

  /// 构建今日计划Tab
  Widget _buildTodayPlanTab(TrainingState state) {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // 统计概览
          _buildStatsOverview(state),
          
          const SizedBox(height: 20),
          
          // 今日计划
          if (state.todayPlan != null)
            TodayPlanCard(
              plan: state.todayPlan!,
              onStartWorkout: () {
                _startWorkout(state.todayPlan!.id);
              },
              onViewDetails: () {
                _viewPlanDetails(state.todayPlan!);
              },
            )
          else
            _buildNoPlanCard(),
          
          const SizedBox(height: 20),
          
          // AI推荐按钮
          _buildAIRecommendationButton(),
          
          const SizedBox(height: 20),
          
        ],
      ),
    );
  }




  /// 构建数据统计Tab - 包含训练历史、打卡签到、数据图表
  Widget _buildDataStatsTab(TrainingState state) {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // 数据概览
          _buildStatsOverview(state),
          
          const SizedBox(height: 20),
          
          // 训练历史
          _buildTrainingHistorySection(state),
          
          const SizedBox(height: 20),
          
          // 打卡签到
          _buildCheckInSection(state),
          
          const SizedBox(height: 20),
          
          // 数据图表
          _buildDataCharts(state),
        ],
      ),
    );
  }





  /// 构建统计概览
  Widget _buildStatsOverview(TrainingState state) {
    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          colors: [AppTheme.primary, AppTheme.primary.withOpacity(0.8)],
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
        ),
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: AppTheme.primary.withOpacity(0.3),
            blurRadius: 12,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        children: [
          Row(
            children: [
              Icon(
                MdiIcons.dumbbell,
                color: Colors.white,
                size: 32,
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      '训练统计',
                      style: TextStyle(
                        fontSize: 16,
                        color: Colors.white.withOpacity(0.9),
                      ),
                    ),
                    Text(
                      '${state.totalWorkouts}次训练',
                      style: const TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                  ],
                ),
              ),
              Text(
                '${state.currentStreak}天',
                style: const TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
            ],
          ),
          
          const SizedBox(height: 16),
          
          Row(
            children: [
              Expanded(
                child: _buildStatItem(
                  '消耗卡路里',
                  '${state.totalCaloriesBurned}卡',
                  MdiIcons.fire,
                ),
              ),
              Expanded(
                child: _buildStatItem(
                  '连续打卡',
                  '${state.currentStreak}天',
                  MdiIcons.calendarCheck,
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  /// 构建统计项
  Widget _buildStatItem(String label, String value, IconData icon) {
    return Column(
      children: [
        Icon(
          icon,
          color: Colors.white,
          size: 20,
        ),
        const SizedBox(height: 4),
        Text(
          value,
          style: const TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        Text(
          label,
          style: TextStyle(
            fontSize: 12,
            color: Colors.white.withOpacity(0.8),
          ),
        ),
      ],
    );
  }

  /// 构建无计划卡片
  Widget _buildNoPlanCard() {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(24),
      decoration: BoxDecoration(
        color: Colors.grey[50],
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: Colors.grey[200]!),
      ),
      child: Column(
        children: [
          Icon(
            MdiIcons.dumbbell,
            size: 48,
            color: Colors.grey[400],
          ),
          const SizedBox(height: 12),
          Text(
            '今日暂无训练计划',
            style: TextStyle(
              fontSize: 16,
              color: Colors.grey[600],
            ),
          ),
          const SizedBox(height: 8),
          Text(
            '创建或生成一个训练计划开始今天的训练吧！',
            style: TextStyle(
              fontSize: 14,
              color: Colors.grey[500],
            ),
            textAlign: TextAlign.center,
          ),
          const SizedBox(height: 16),
          Row(
            children: [
              Expanded(
                child: OutlinedButton.icon(
                  onPressed: () {
                    _tabController.animateTo(2); // 切换到AI训练计划Tab
                  },
                  icon: const Icon(Icons.psychology),
                  label: const Text('AI生成'),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: ElevatedButton.icon(
                  onPressed: () {
                    _createCustomPlan();
                  },
                  icon: const Icon(Icons.add),
                  label: const Text('创建计划'),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }



  // 事件处理方法
  void _handleMenuAction(String action) {
    switch (action) {
      case 'create_plan':
        _createCustomPlan();
        break;
      case 'import_template':
        _importTemplate();
        break;
      case 'export_data':
        _exportData();
        break;
    }
  }

  void _startWorkout(String planId) {
    ref.read(trainingProvider.notifier).startWorkout(planId);
    // 导航到训练页面
    Navigator.pushNamed(context, '/training/workout', arguments: planId);
  }

  void _viewPlanDetails(plan) {
    Navigator.pushNamed(context, '/training/plan-details', arguments: plan);
  }

  void _viewChartDetails(String chartType) {
    Navigator.pushNamed(context, '/training/chart-details', arguments: chartType);
  }

  void _createCustomPlan() {
    Navigator.pushNamed(context, '/training/create-plan');
  }

  void _importTemplate() {
    Navigator.pushNamed(context, '/training/import-template');
  }

  void _exportData() {
    Navigator.pushNamed(context, '/training/export-data');
  }

  void _viewHistoryDetails(history) {
    Navigator.pushNamed(context, '/training/history-details', arguments: history);
  }

  /// 构建训练历史部分
  Widget _buildTrainingHistorySection(TrainingState state) {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.1),
            blurRadius: 8,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
          Row(
            children: [
              Icon(
                MdiIcons.history,
                color: AppTheme.primaryColor,
                size: 24,
              ),
              const SizedBox(width: 8),
        const Text(
                '训练历史',
          style: TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.bold,
            color: Colors.black87,
          ),
        ),
            ],
          ),
          const SizedBox(height: 16),
          
          if (state.history.isEmpty)
            Container(
              width: double.infinity,
              padding: const EdgeInsets.all(24),
              decoration: BoxDecoration(
                color: Colors.grey[50],
                borderRadius: BorderRadius.circular(8),
                border: Border.all(color: Colors.grey[200]!),
              ),
              child: Column(
          children: [
                  Icon(
                    MdiIcons.dumbbell,
                    size: 48,
                    color: Colors.grey[400],
                  ),
                  const SizedBox(height: 12),
                  Text(
                    '暂无训练记录',
                    style: TextStyle(
                      fontSize: 16,
                      color: Colors.grey[600],
                    ),
                  ),
                  const SizedBox(height: 8),
                  Text(
                    '开始您的第一次训练吧！',
                    style: TextStyle(
                      fontSize: 14,
                      color: Colors.grey[500],
              ),
            ),
          ],
        ),
            )
          else
            ListView.builder(
              shrinkWrap: true,
              physics: const NeverScrollableScrollPhysics(),
              itemCount: state.history.take(5).length,
              itemBuilder: (context, index) {
                final history = state.history[index];
                return ListTile(
                  leading: CircleAvatar(
                    backgroundColor: AppTheme.primaryColor.withOpacity(0.1),
                    child: Icon(
                      MdiIcons.dumbbell,
                      color: AppTheme.primaryColor,
                      size: 20,
                    ),
                  ),
                  title: Text(
                    history.planName,
                    style: const TextStyle(fontWeight: FontWeight.w500),
                  ),
                  subtitle: Text(
                    '${history.duration}分钟 • ${history.caloriesBurned}卡路里',
                  ),
                  trailing: Text(
                    _formatDate(history.date),
                    style: TextStyle(
                      fontSize: 12,
                      color: Colors.grey[600],
                    ),
                  ),
                  onTap: () => _viewHistoryDetails(history),
                );
              },
            ),
        ],
      ),
    );
  }

  /// 构建打卡签到部分
  Widget _buildCheckInSection(TrainingState state) {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.1),
            blurRadius: 8,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
        Row(
          children: [
              Icon(
                MdiIcons.checkCircle,
                color: AppTheme.primaryColor,
                size: 24,
              ),
              const SizedBox(width: 8),
              const Text(
                '打卡签到',
                style: TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
              ),
            ),
          ],
        ),
          const SizedBox(height: 16),
          
          // 连续打卡天数
          Container(
            width: double.infinity,
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              gradient: LinearGradient(
                colors: [
                  AppTheme.primaryColor.withOpacity(0.1),
                  AppTheme.primaryColor.withOpacity(0.05),
                ],
                begin: Alignment.topLeft,
                end: Alignment.bottomRight,
              ),
              borderRadius: BorderRadius.circular(8),
              border: Border.all(color: AppTheme.primaryColor.withOpacity(0.3)),
            ),
            child: Row(
          children: [
                Icon(
                  MdiIcons.fire,
                  color: AppTheme.primaryColor,
                  size: 32,
                ),
                const SizedBox(width: 16),
            Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        '连续打卡 ${state.currentStreak} 天',
                        style: TextStyle(
                          fontSize: 18,
                          fontWeight: FontWeight.bold,
                          color: AppTheme.primaryColor,
                        ),
                      ),
                      Text(
                        '保持这个节奏，继续加油！',
                        style: TextStyle(
                          fontSize: 14,
                          color: AppTheme.primaryColor.withOpacity(0.7),
              ),
            ),
          ],
                  ),
                ),
                ElevatedButton(
                  onPressed: () => _performCheckIn(),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: AppTheme.primaryColor,
                    foregroundColor: Colors.white,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(20),
                    ),
                  ),
                  child: const Text('立即打卡'),
                ),
              ],
            ),
          ),
          
          const SizedBox(height: 16),
          
          // 打卡日历
          CheckInCalendar(
            checkIns: state.checkIns,
            currentStreak: state.currentStreak,
            onCheckIn: (type, content, images, location) {
              ref.read(trainingProvider.notifier).checkIn(
                type: type,
                content: content,
                images: images,
                location: location,
              );
            },
          ),
        ],
      ),
    );
  }

  /// 构建数据图表部分
  Widget _buildDataCharts(TrainingState state) {
    return Container(
        padding: const EdgeInsets.all(16),
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(12),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.1),
              blurRadius: 8,
              offset: const Offset(0, 2),
            ),
          ],
        ),
        child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
          children: [
          Row(
            children: [
              Icon(
                MdiIcons.chartLine,
                color: AppTheme.primaryColor,
                size: 24,
              ),
              const SizedBox(width: 8),
              const Text(
                '数据图表',
                style: TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
            ),
          ],
        ),
          const SizedBox(height: 16),
          
          ProgressChart(
            stats: UserStats(
              totalWorkouts: state.totalWorkouts,
              totalMinutes: 0, // 从历史数据计算
              totalCaloriesBurned: state.totalCaloriesBurned,
              currentStreak: state.currentStreak,
              maxStreak: state.currentStreak,
              averageWorkoutDuration: 0,
              workoutFrequency: 0,
              maxWeightLifted: 0,
              totalDistanceCovered: 0,
            ),
            history: state.history,
            onChartTap: (chartType) {
              _viewChartDetails(chartType);
            },
          ),
        ],
      ),
    );
  }

  /// 执行打卡
  void _performCheckIn() {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('打卡成功'),
        content: const Text('恭喜您完成今日打卡！继续保持这个好习惯。'),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text('确定'),
          ),
        ],
      ),
    );
  }

  /// 格式化日期
  String _formatDate(DateTime date) {
    final now = DateTime.now();
    final difference = now.difference(date).inDays;
    
    if (difference == 0) {
      return '今天';
    } else if (difference == 1) {
      return '昨天';
    } else if (difference < 7) {
      return '$difference天前';
    } else {
      return '${date.month}/${date.day}';
    }
  }
  }

  /// 构建AI推荐按钮
  Widget _buildAIRecommendationButton() {
    return Container(
      width: double.infinity,
      child: ElevatedButton.icon(
        onPressed: () => _showAIRecommendationDialog(),
        icon: Icon(
          MdiIcons.robot,
          color: Colors.white,
        ),
        label: const Text(
          'AI智能推荐训练计划',
          style: TextStyle(
            fontSize: 16,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        style: ElevatedButton.styleFrom(
          backgroundColor: AppTheme.primaryColor,
          foregroundColor: Colors.white,
          padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 24),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12),
          ),
          elevation: 4,
        ),
      ),
    );
  }

  /// 显示AI推荐弹窗
  void _showAIRecommendationDialog() {
    showDialog(
      context: context,
      builder: (context) => Dialog(
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(16),
        ),
        child: Container(
          padding: const EdgeInsets.all(24),
      child: Column(
            mainAxisSize: MainAxisSize.min,
        children: [
              // AI图标和标题
              Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: AppTheme.primaryColor.withOpacity(0.1),
                  shape: BoxShape.circle,
                ),
                child: Icon(
                  MdiIcons.robot,
                  size: 48,
                  color: AppTheme.primaryColor,
                ),
              ),
              const SizedBox(height: 16),
              
              const Text(
                'AI智能推荐',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
              ),
              const SizedBox(height: 8),
              
              const Text(
                '基于您的训练历史和目标，为您推荐最适合的训练计划',
                textAlign: TextAlign.center,
                style: TextStyle(
                  fontSize: 16,
                  color: Colors.grey,
                ),
              ),
              const SizedBox(height: 24),
              
              // 推荐选项
              _buildRecommendationOption(
                '增肌训练',
                '适合想要增加肌肉量的用户',
                MdiIcons.dumbbell,
                Colors.blue,
                () => _generateAIPlan('muscle_gain'),
              ),
              
              const SizedBox(height: 12),
              
              _buildRecommendationOption(
                '减脂训练',
                '适合想要燃烧脂肪的用户',
                MdiIcons.fire,
                Colors.red,
                () => _generateAIPlan('fat_loss'),
              ),
              
              const SizedBox(height: 12),
              
              _buildRecommendationOption(
                '全身训练',
                '适合想要全面提升的用户',
                MdiIcons.account,
                Colors.green,
                () => _generateAIPlan('full_body'),
              ),
              
              const SizedBox(height: 24),
              
              // 关闭按钮
              TextButton(
                onPressed: () => Navigator.of(context).pop(),
                child: const Text(
                  '取消',
            style: TextStyle(
                    fontSize: 16,
                    color: Colors.grey,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  /// 构建推荐选项
  Widget _buildRecommendationOption(
    String title,
    String description,
    IconData icon,
    Color color,
    VoidCallback onTap,
  ) {
    return InkWell(
      onTap: onTap,
      borderRadius: BorderRadius.circular(12),
      child: Container(
        padding: const EdgeInsets.all(16),
        decoration: BoxDecoration(
          color: color.withOpacity(0.1),
          borderRadius: BorderRadius.circular(12),
          border: Border.all(color: color.withOpacity(0.3)),
        ),
        child: Row(
          children: [
            Container(
              padding: const EdgeInsets.all(8),
              decoration: BoxDecoration(
                color: color.withOpacity(0.2),
                borderRadius: BorderRadius.circular(8),
              ),
              child: Icon(
                icon,
                color: color,
                size: 24,
              ),
            ),
            const SizedBox(width: 16),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    title,
                    style: TextStyle(
                      fontSize: 16,
              fontWeight: FontWeight.bold,
                      color: color,
                    ),
                  ),
                  Text(
                    description,
                    style: TextStyle(
                      fontSize: 14,
                      color: color.withOpacity(0.7),
                    ),
                  ),
                ],
              ),
            ),
            Icon(
              Icons.arrow_forward_ios,
              color: color.withOpacity(0.5),
              size: 16,
            ),
          ],
        ),
      ),
    );
  }

  /// 生成AI训练计划
  void _generateAIPlan(String type) {
    Navigator.of(context).pop(); // 关闭弹窗
    
    // 显示生成中提示
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (context) => Dialog(
        child: Container(
          padding: const EdgeInsets.all(24),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              const CircularProgressIndicator(),
              const SizedBox(height: 16),
              const Text(
                'AI正在为您生成训练计划...',
                style: TextStyle(fontSize: 16),
              ),
            ],
          ),
        ),
      ),
    );
    
    // 模拟AI生成过程
    Future.delayed(const Duration(seconds: 2), () {
      Navigator.of(context).pop(); // 关闭加载弹窗
      
      // 显示生成结果
      showDialog(
        context: context,
        builder: (context) => AlertDialog(
          title: const Text('训练计划生成完成'),
          content: const Text('AI已为您生成了个性化的训练计划，请查看今日计划。'),
          actions: [
            TextButton(
              onPressed: () => Navigator.of(context).pop(),
              child: const Text('确定'),
            ),
          ],
        ),
      ),
    );
  }
}
    });
  }
}
