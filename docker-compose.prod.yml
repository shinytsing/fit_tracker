version: '3.8'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    container_name: fittracker-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fittracker}
      POSTGRES_USER: ${POSTGRES_USER:-fittracker}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend-go/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fittracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fittracker} -d ${POSTGRES_DB:-fittracker}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: fittracker-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - fittracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Go 后端服务
  backend:
    build:
      context: ./backend-go
      dockerfile: Dockerfile
    image: fittracker-backend:latest
    container_name: fittracker-backend-prod
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - SERVER_MODE=release
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-fittracker}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB:-fittracker}
      - DB_SSL_MODE=${DB_SSL_MODE:-require}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=0
      - DATABASE_URL=postgres://${POSTGRES_USER:-fittracker}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-fittracker}?sslmode=${DB_SSL_MODE:-disable}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_HOURS=${JWT_EXPIRE_HOURS:-24}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_URL=${DEEPSEEK_API_URL:-https://api.deepseek.com/v1/chat/completions}
      - TENCENT_HUNYUAN_API_KEY=${TENCENT_HUNYUAN_API_KEY}
      - TENCENT_HUNYUAN_API_URL=${TENCENT_HUNYUAN_API_URL:-https://hunyuan.tencentcloudapi.com}
    networks:
      - fittracker-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Flutter Web 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: fittracker-frontend:latest
    container_name: fittracker-frontend-prod
    networks:
      - fittracker-network
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: fittracker-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl_certs:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
      - frontend_build:/usr/share/nginx/html:ro
    networks:
      - fittracker-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # 监控服务 - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: fittracker-prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - fittracker-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # 监控服务 - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: fittracker-grafana-prod
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - fittracker-network
    depends_on:
      - prometheus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # 日志聚合 - Loki
  loki:
    image: grafana/loki:latest
    container_name: fittracker-loki-prod
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - fittracker-network
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # 日志收集 - Promtail
  promtail:
    image: grafana/promtail:latest
    container_name: fittracker-promtail-prod
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - ./logs:/var/log/app:ro
      - /var/log:/var/log/host:ro
    networks:
      - fittracker-network
    depends_on:
      - loki
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  frontend_build:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  fittracker-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16