version: '3.8'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    container_name: fittracker-postgres-simple
    environment:
      POSTGRES_DB: fittracker
      POSTGRES_USER: fittracker
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fittracker123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fittracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fittracker"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: fittracker-redis-simple
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - fittracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Go 后端 API
  backend:
    build:
      context: ./backend-go
      dockerfile: Dockerfile
    image: fittracker-backend:latest
    container_name: fittracker-backend-simple
    environment:
      - GIN_MODE=release
      - PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=fittracker
      - DB_PASSWORD=${POSTGRES_PASSWORD:-fittracker123}
      - DB_NAME=fittracker
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
      - REDIS_DB=0
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
      - TENCENT_HUNYUAN_API_KEY=${TENCENT_HUNYUAN_API_KEY:-}
      - DATABASE_URL=postgres://fittracker:${POSTGRES_PASSWORD:-fittracker123}@db:5432/fittracker?sslmode=disable
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
    ports:
      - "8080:8080"
    networks:
      - fittracker-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: fittracker-nginx-simple
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl_certs:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - fittracker-network
    depends_on:
      - backend
    restart: unless-stopped

networks:
  fittracker-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
